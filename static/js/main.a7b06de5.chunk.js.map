{"version":3,"sources":["containers/Sidebar/icons/house.svg","containers/Sidebar/icons/calendar.svg","containers/Sidebar/icons/upcoming.svg","containers/CreateProjectBtn/index.js","containers/Sidebar/index.js","actions/ProjectActions.js","containers/Todo/index.js","containers/List/index.js","components/App/index.js","reducers/mainProjects.js","reducers/projects.js","reducers/index.js","store/configureStore.js","reportWebVitals.js","index.js"],"names":["ModalCreateProject","props","useState","path","setPath","title","setTitle","error","setError","Fragment","type","className","placeholder","onChange","event","target","value","onClick","onSubmit","CreateProjectBtn","focus","setFocus","onCreate","connect","store","projects","dispatch","createProject","payload","to","activeClassName","src","HouseIcon","alt","CalendarIcon","UpcomingIcon","Object","entries","map","project_path","project","changeTodo","id","data","includes","deleteTodo","onInput","style","height","scrollHeight","setText","content","text","checked","setChecked","defaultChecked","defaultValue","rows","onMouseMove","DeleteBtn","AddBtn","deleteProject","addTodo","history","useHistory","projectPath","match","params","list","secondary_project","undefined","mainProjects","push","todo","App","component","List","from","initialState","inbox","today","upcoming","testproject","rootReducer","combineReducers","res","state","action","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7b06de5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/house.8216284b.svg\";","export default __webpack_public_path__ + \"static/media/calendar.4410650b.svg\";","export default __webpack_public_path__ + \"static/media/upcoming.934f8ff0.svg\";","import React, { useState } from 'react';\r\n\r\nimport './styles.sass';\r\n\r\n\r\nconst CreateProjectBtn = props => {\r\n    const [focus, setFocus] = useState(false);\r\n\r\n    const onFocused = () => {\r\n        if (focus) {setFocus(false)} else {setFocus(true)}\r\n    }\r\n    \r\n    const onSubmit = (path, title) => {\r\n        props.onCreate(path, title);\r\n        setFocus(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"create-project-btn\" onClick={onFocused}>\r\n                New Project\r\n            </button>\r\n            {\r\n                focus ? <ModalCreateProject onSubmit={onSubmit}/> : null\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst ModalCreateProject = props => {\r\n    const [path, setPath] = useState('');\r\n    const [title, setTitle] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    const handlePath = event => {\r\n        setPath(event.target.value);\r\n    }\r\n\r\n    const handleTitle = event => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (path != \"\" && title != \"\") {\r\n            props.onSubmit(path, title);\r\n        } else {\r\n            setError(\"Fill in all the fields\");\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <input \r\n                type=\"text\" \r\n                className=\"create-project-btn__input\" \r\n                placeholder=\"Enter path\"\r\n                onChange={handlePath}\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                className=\"create-project-btn__input\" \r\n                placeholder=\"Enter title\"\r\n                onChange={handleTitle}\r\n            />\r\n            <button \r\n                className=\"create-project-btn__btn\" \r\n                onClick={onSubmit}\r\n            >\r\n                Create\r\n            </button>\r\n            <span className=\"create-project-btn__error\">{error}</span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectBtn;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nimport './style.sass';\r\n\r\nimport HouseIcon from './icons/house.svg';\r\nimport CalendarIcon from './icons/calendar.svg';\r\nimport UpcomingIcon from './icons/upcoming.svg';\r\nimport { createProject } from '../../actions/ProjectActions'\r\n\r\nimport CreateProjectBtn from '../CreateProjectBtn';\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <aside className='sidebar'>\r\n            <div className=\"sidebar__links\">\r\n                <NavLink\r\n                    to='/inbox'\r\n                    className='sidebar__link'\r\n                    activeClassName='sidebar__link_active'\r\n                >\r\n                    <img src={HouseIcon} alt=\"icon\" className='sidebar__icon'/>\r\n                    Inbox\r\n                </NavLink>\r\n                <NavLink\r\n                    to='/today'\r\n                    className='sidebar__link'\r\n                    activeClassName='sidebar__link_active'\r\n                >\r\n                    <img src={CalendarIcon} alt=\"icon\" className='sidebar__icon'/>\r\n                    Today\r\n                </NavLink>\r\n                <NavLink\r\n                    to='/upcoming'\r\n                    className='sidebar__link'\r\n                    activeClassName='sidebar__link_active'\r\n                >\r\n                    <img src={UpcomingIcon} alt=\"icon\" className='sidebar__icon'/>\r\n                    Upcoming\r\n                </NavLink>\r\n                <div className=\"sidebar__section-title\">Projects</div>\r\n                {\r\n                    Object.entries(props.projects).map(([project_path, project]) => {\r\n                        return <NavLink\r\n                            to={'/' + project_path}\r\n                            className='sidebar__link'\r\n                            activeClassName='sidebar__link_active'\r\n                            key={project_path}\r\n                        >\r\n                            {project.title}\r\n                        </NavLink>\r\n                    })\r\n                }\r\n                <CreateProjectBtn onCreate={props.createProject}/>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        projects: store.projects\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   createProject: (path, title) => dispatch(createProject(path, title))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Sidebar);","export function createProject(path, title) {\r\n  return {\r\n    type: 'CREATE_PROJECT',\r\n    payload: {\r\n        path,\r\n        title\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteProject(path) {\r\n    return {\r\n        type: 'DELETE_PROJECT',\r\n        payload: {\r\n            path\r\n        }\r\n    }\r\n}\r\n\r\nexport function addTodo(path) {\r\n    const scnd = !['inbox', 'upcoming', 'today'].includes(path);\r\n    const postfix = scnd ? '_SECONDARY' : '_MAIN';\r\n    return {\r\n        type: 'ADD_TODO' + postfix,\r\n        payload: {\r\n            path\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeTodo(path, id, data) {\r\n    const scnd = !['inbox', 'upcoming', 'today'].includes(path);\r\n    const postfix = scnd ? '_SECONDARY' : '_MAIN';\r\n    return {\r\n        type: 'CHANGE_TODO' + postfix,\r\n        payload: {\r\n            path,\r\n            id,\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteTodo(path, id) {\r\n    const scnd = !['inbox', 'upcoming', 'today'].includes(path);\r\n    const postfix = scnd ? '_SECONDARY' : '_MAIN';\r\n    return {\r\n        type: 'DELETE_TODO' + postfix,\r\n        payload: {\r\n            path,\r\n            id\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nimport { changeTodo, deleteTodo } from '../../actions/ProjectActions';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport './styles.sass';\r\n\r\n\r\nconst Todo = props => {\r\n    const onInput = (event) => {\r\n        event.target.style.height = \"1em\";\r\n        event.target.style.height = (event.target.scrollHeight) + \"px\";\r\n        setText(event.target.value);\r\n        props.changeTodo(props.path, props.id, {\r\n            content: text,\r\n            checked\r\n        });\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        props.changeTodo(props.path, props.id, {\r\n            content: text,\r\n            checked: event.target.checked\r\n        });\r\n    }\r\n\r\n    const onDelete = event => {\r\n        props.deleteTodo(props.path, props.id);\r\n    }\r\n\r\n    const [checked, setChecked] = useState(props.data.checked);\r\n    const [text, setText] = useState(props.data.content);\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <input \r\n                className=\"todo__checkbox\" \r\n                type=\"checkbox\" \r\n                defaultChecked={props.data.checked} \r\n                onChange={onChange}\r\n            />\r\n            <textarea \r\n                className={\"todo__input\" + ' ' + (checked ? 'todo__input_checked' : '')} \r\n                type=\"text\" \r\n                defaultValue={props.data.content} \r\n                rows={1}\r\n                onInput={onInput}\r\n                onMouseMove={onInput}\r\n            />\r\n            <button \r\n                className=\"todo__delete-btn\"\r\n                onClick={onDelete}\r\n            >\r\n                <img \r\n                    src=\"/icons/trash.svg\" \r\n                    alt=\"icon\" \r\n                    className=\"todo__icon\"\r\n                />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return store;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   changeTodo: (path, id, data) => dispatch(changeTodo(path, id, data)),\r\n   deleteTodo: (path, id) => dispatch(deleteTodo(path, id))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Todo);\r\n","import React, { Component, PropTypes } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { deleteProject, addTodo } from '../../actions/ProjectActions'\r\n\r\nimport './style.sass';\r\n\r\nimport Todo from '../Todo';\r\n\r\n\r\nconst List = (props) => {\r\n    const history = useHistory();\r\n    const projectPath = props.match.params.list;\r\n    let project;\r\n    let secondary_project = false;\r\n\r\n    if (props.mainProjects[projectPath] !== undefined) {\r\n        project = props.mainProjects[projectPath];\r\n    } else if (props.projects[projectPath] !== undefined) {\r\n        project = props.projects[projectPath];\r\n        secondary_project = true;\r\n    } else {\r\n        project = {\r\n            title: 'Not found',\r\n            list: [\r\n                {\r\n                    content: 'Сделать test',\r\n                    checked: true\r\n                }\r\n            ]\r\n        };\r\n        history.push(\"/inbox\");\r\n    }\r\n\r\n    const onDelete = () => {\r\n        history.push(\"/inbox\");\r\n        props.deleteProject(projectPath);\r\n    }\r\n\r\n    const onAdd = () => {\r\n        props.addTodo(projectPath);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            <div className=\"list__header\">\r\n                <div className=\"list__container\">\r\n                    <span className=\"list__title\">\r\n                        {project.title}\r\n                        {secondary_project ? <DeleteBtn onClick={onDelete}/> : ''}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"list__todos\">\r\n                <div className=\"list__container\">\r\n                    <AddBtn onClick={onAdd}/>\r\n                    {\r\n                        project.list.map((todo, id) => <Todo key={projectPath+id} id={id} data={todo} path={projectPath} />)\r\n                    } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeleteBtn = props => {\r\n    return (\r\n        <button \r\n            className=\"list__delete-btn\"\r\n            onClick={props.onClick}\r\n        >\r\n            <img \r\n                src=\"/icons/trash.svg\" \r\n                alt=\"icon\" \r\n                className=\"list__icon\"\r\n            />\r\n        </button>\r\n    )\r\n}\r\n\r\nconst AddBtn = props => {\r\n    return (\r\n        <button\r\n            className=\"list__add-btn\"\r\n            onClick={props.onClick}\r\n        >\r\n            New task\r\n            <img src=\"/icons/plus.svg\"/>\r\n        </button>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return store;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   deleteProject: path => dispatch(deleteProject(path)),\r\n   addTodo: path => dispatch(addTodo(path))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(List);\r\n","import React from 'react';\nimport './style.sass'\n\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport Sidebar from '../../containers/Sidebar'\nimport List from '../../containers/List'\n\nconst App = (props) => {\n    return (\n        <div className='app'>\n            <Sidebar/>\n            <Switch>\n                <Route\n                    path='/:list'\n                    component={List}\n                />\n                <Redirect\n                    from='/'\n                    to='/inbox'\n                />\n            </Switch>\n        </div>\n    )\n}\n\nexport default App;","const initialState = {\r\n    inbox: {\r\n        title: 'Inbox',\r\n        list: [\r\n            {\r\n                content: 'Test task 1',\r\n                checked: false\r\n            },\r\n            {\r\n                content: 'Test task 2',\r\n                checked: true\r\n            }\r\n        ]\r\n    },\r\n    today: {\r\n        title: 'Today',\r\n        list: [\r\n            \r\n        ]\r\n    },\r\n    upcoming: {\r\n        title: 'Upcoming',\r\n        list: [\r\n            \r\n        ]\r\n    }\r\n}\r\n\r\nexport function mainProjectsReducer(state = initialState, action) {\r\n    let res;\r\n    switch(action.type) {\r\n        case 'DELETE_PROJECT':\r\n            res = {...state};\r\n            delete res[action.payload.path];\r\n            return res;\r\n\r\n        case 'ADD_TODO_MAIN':\r\n            res = {...state};\r\n            res[action.payload.path].list.push({\r\n                content: 'Click to edit',\r\n                checked: false\r\n            });\r\n            return res;\r\n\r\n        case 'CHANGE_TODO_MAIN':\r\n            res = {...state};\r\n            res[action.payload.path].list[action.payload.id] = action.payload.data;\r\n            return res;\r\n\r\n        case 'DELETE_TODO_MAIN':\r\n            res = {...state};\r\n            delete res[action.payload.path].list[action.payload.id];\r\n            return res;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    testproject: {\r\n        title: 'Test Project',\r\n        list: [\r\n            {\r\n                content: 'test task in test project',\r\n                checked: true\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport function projectsReducer(state = initialState, action) {\r\n    let res;\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            return { ...state, [action.payload.path]: {\r\n                title: action.payload.title,\r\n                list: [\r\n\r\n                ]\r\n            }};\r\n\r\n        case 'DELETE_PROJECT':\r\n            res = {...state};\r\n            delete res[action.payload.path];\r\n            return res;\r\n\r\n        case 'ADD_TODO_SECONDARY':\r\n            res = {...state};\r\n            res[action.payload.path].list.push({\r\n                content: 'Click to edit',\r\n                checked: false\r\n            });\r\n            return res;\r\n\r\n        case 'CHANGE_TODO_SECONDARY':\r\n            res = {...state};\r\n            res[action.payload.path].list[action.payload.id] = action.payload.data;\r\n            return res;\r\n\r\n        case 'DELETE_TODO_SECONDARY':\r\n            res = {...state};\r\n            delete res[action.payload.path].list[action.payload.id];\r\n            return res;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { mainProjectsReducer } from './mainProjects';\r\nimport { projectsReducer } from './projects';\r\n\r\nexport const rootReducer = combineReducers({\r\n    mainProjects: mainProjectsReducer,\r\n    projects: projectsReducer\r\n});","import { createStore } from 'redux'\r\nimport { rootReducer } from '../reducers'\r\n\r\nexport const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { store } from './store/configureStore'\nimport { Provider } from 'react-redux'\n\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.sass';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}